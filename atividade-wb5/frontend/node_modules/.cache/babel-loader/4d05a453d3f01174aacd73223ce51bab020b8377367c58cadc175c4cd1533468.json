{"ast":null,"code":"const _excluded = [\"value\", \"use12HourClock\", \"padValues\", \"emptyCharacter\", \"precision\", \"noClearButton\", \"hoursAddon\", \"minutesAddon\", \"secondsAddon\", \"millisecondsAddon\", \"className\", \"disabled\", \"readOnly\", \"datePart\", \"onChange\", \"onBlur\", \"onFocus\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport classNames from 'classnames';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useRef, useState } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport Button from './Button';\nimport DateTimePartInput from './DateTimePartInput';\nimport { times } from './Icon';\nimport Widget from './Widget';\nimport dates from './dates';\nimport useFocusManager from './useFocusManager';\nconst selectTextRange = el => {\n  if (el instanceof HTMLInputElement) return el.select();\n  const range = document.createRange();\n  range.selectNodeContents(el);\n  const selection = window.getSelection();\n  if (selection) {\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}; // prettier-ignore\n\nconst isEmptyValue = (p, precision) => p.hours == null && p.minutes == null && (precision != 'seconds' && precision !== 'milliseconds' || p.seconds == null) && (precision !== 'milliseconds' || p.milliseconds == null); // prettier-ignore\n\nconst isPartialValue = (p, precision) => p.hours == null || p.minutes == null || (precision === 'seconds' || precision === 'milliseconds') && p.seconds == null || precision === 'milliseconds' && p.milliseconds == null;\nconst getValueParts = (value, use12HourClock) => {\n  let hours, minutes, seconds, milliseconds;\n  let meridiem = 'AM';\n  if (value) {\n    hours = value.getHours();\n    if (use12HourClock) {\n      meridiem = hours < 12 ? 'AM' : 'PM';\n      hours = hours % 12 || 12;\n    }\n    minutes = value.getMinutes();\n    seconds = value.getSeconds();\n    milliseconds = value.getMilliseconds();\n  }\n  return {\n    hours,\n    minutes,\n    seconds,\n    milliseconds,\n    meridiem\n  };\n};\nconst TEST_VALID = {\n  hours: /^([1]?[0-9]|2[0-3])$/,\n  hours12: /^(1[0-2]|0?[1-9])$/,\n  minutes: /^([0-5]?\\d)$/,\n  seconds: /^([0-5]?\\d)$/,\n  milliseconds: /^(\\d{1,3})$/\n};\nconst TEST_COMPLETE = {\n  hours: /^([3-9]|\\d{2})$/,\n  hours12: /^(\\d{2}|[2-9])$/,\n  minutes: /^(d{2}|[6-9])$/,\n  seconds: /^(d{2}|[6-9])$/,\n  milliseconds: /^(\\d{3})$/\n};\nfunction testPart(value, part, use12HourClock, tests) {\n  const key = part === 'hours' && use12HourClock ? 'hours12' : part;\n  return tests[key].test(value);\n}\nconst isValid = (value, part, use12HourClock) => testPart(value, part, use12HourClock, TEST_VALID);\nconst isComplete = (value, part, use12HourClock) => testPart(value, part, use12HourClock, TEST_COMPLETE);\nconst propTypes = {\n  /**\n   * @example ['valuePicker', [ ['new Date()'] ]]\n   */\n  value: PropTypes.instanceOf(Date),\n  /**\n   * @example ['onChangePicker', [ ['new Date()'] ]]\n   */\n  onChange: PropTypes.func,\n  /**\n   * The default date used to construct a new time when the `value` is empty\n   *\n   * @default new Date()\n   **/\n  datePart: PropTypes.instanceOf(Date),\n  /**\n   * Use a 12 hour clock (with AM/PM) instead of 24 hour one.\n   * The configured localizer may provide a default value .\n   **/\n  use12HourClock: PropTypes.bool,\n  /** Time part values will be padded by `0` */\n  padValues: PropTypes.bool,\n  /** The string character used to pad empty, or cleared values */\n  emptyCharacter: PropTypes.string,\n  /** Hide the input clear button */\n  noClearButton: PropTypes.bool,\n  /**\n   * @example ['disabled', ['new Date()']]\n   */\n  disabled: PropTypes.bool,\n  /**\n   * @example ['readOnly', ['new Date()']]\n   */\n  readOnly: PropTypes.bool,\n  /** Controls how precise of a time can be input **/\n  precision: PropTypes.oneOf(['minutes', 'seconds', 'milliseconds']).isRequired,\n  /**\n   * The seperator between hours and minutes\n   * @default ':'\n   */\n  hoursAddon: PropTypes.node,\n  /**\n   * The seperator between hours and minutes\n   * @default ':'\n   */\n  minutesAddon: PropTypes.node,\n  /**\n   * The seperator between hours and minutes\n   * @default ':'\n   */\n  secondsAddon: PropTypes.node,\n  /**\n   * The seperator between hours and minutes\n   * @default '.'\n   */\n  millisecondsAddon: PropTypes.node\n};\nconst defaultProps = {\n  hoursAddon: ':',\n  padValues: true,\n  precision: 'minutes',\n  emptyCharacter: '-'\n};\n\n// let count = 0\nfunction useTimePartState(value, use12HourClock) {\n  const [state, setState] = useState(() => ({\n    value,\n    use12HourClock,\n    timeParts: getValueParts(value, use12HourClock)\n  }));\n  const setTimeParts = useCallback(timeParts => setState(s => Object.assign({}, s, {\n    timeParts\n  })), [setState]);\n  if (state.value !== value || state.use12HourClock !== use12HourClock) {\n    // count++\n    // if (count < 100)\n    setState({\n      value,\n      use12HourClock,\n      timeParts: getValueParts(value, use12HourClock)\n    });\n  }\n  return [state.timeParts, setTimeParts];\n}\nfunction TimeInput(uncontrolledProps) {\n  const _useUncontrolled = useUncontrolled(uncontrolledProps, {\n      value: 'onChange'\n    }),\n    {\n      value,\n      use12HourClock,\n      padValues: pad,\n      emptyCharacter,\n      precision,\n      noClearButton,\n      hoursAddon,\n      minutesAddon,\n      secondsAddon,\n      millisecondsAddon,\n      className,\n      disabled,\n      readOnly,\n      datePart,\n      onChange,\n      onBlur,\n      onFocus\n    } = _useUncontrolled,\n    props = _objectWithoutPropertiesLoose(_useUncontrolled, _excluded);\n  let minsAddon = minutesAddon !== undefined ? minutesAddon : precision === 'seconds' || precision === 'milliseconds' ? ':' : '';\n  let secsAddon = secondsAddon !== undefined ? secondsAddon : precision === 'milliseconds' ? ':' : '';\n  const ref = useRef(null);\n  const hourRef = useRef(null);\n  const [focusEvents, focused] = useFocusManager(ref, {\n    disabled,\n    onBlur,\n    onFocus\n  }, {\n    didHandle: (focused, e) => {\n      var _hourRef$current;\n      if (!focused) return;\n      if (!e.target.dataset.focusable) (_hourRef$current = hourRef.current) == null ? void 0 : _hourRef$current.focus();else select(e.target);\n    }\n  });\n  const [timeParts, setTimeParts] = useTimePartState(value != null ? value : null, use12HourClock != null ? use12HourClock : false);\n  function getDatePart() {\n    return dates.startOf(datePart || new Date(), 'day');\n  }\n  const getMin = part => part === 'hours' ? 1 : 0;\n  const getMax = part => {\n    if (part === 'hours') return use12HourClock ? 12 : 23;\n    if (part === 'milliseconds') return 999;\n    return 59;\n  };\n  function select(target = document.activeElement) {\n    window.Promise.resolve().then(() => {\n      if (focused) selectTextRange(target);\n    });\n  }\n  /**\n   * Handlers\n   */\n\n  const handleClear = () => {\n    var _hourRef$current2;\n    (_hourRef$current2 = hourRef.current) == null ? void 0 : _hourRef$current2.focus();\n    if (value) onChange(null);else setTimeParts(getValueParts(null));\n  };\n  const handleChange = (part, event) => {\n    const currentValue = timeParts[part];\n    const {\n      target\n    } = event;\n    const rawValue = target.value;\n    let strValue = `${currentValue || ''}${rawValue}`;\n    let numValue = +strValue;\n    if (isNaN(numValue) || strValue && !isValid(strValue, part, use12HourClock != null ? use12HourClock : false)) {\n      // the combined value is now past the max or invalid so try the single\n      // digit and \"start over\" filling the value\n      if (isValid(rawValue, part, use12HourClock != null ? use12HourClock : false) && !isNaN(+rawValue)) {\n        // change the effective current value\n        strValue = rawValue;\n        numValue = +rawValue;\n      } else {\n        return event.preventDefault();\n      }\n    }\n    const nextValue = target.value ? numValue : null;\n    notifyChange({\n      [part]: nextValue\n    });\n    if (nextValue != null && isComplete(strValue, part, use12HourClock != null ? use12HourClock : false)) {\n      focusNext(event.currentTarget, +1);\n    } else {\n      select(target);\n    }\n  };\n  const handleSelect = ({\n    target\n  }) => {\n    select(target);\n  };\n  const handleKeyDown = (part, event) => {\n    const {\n      key\n    } = event;\n    const input = event.currentTarget;\n    const {\n      selectionStart: start,\n      selectionEnd: end\n    } = input;\n    const isRTL = getComputedStyle(input).getPropertyValue('direction') === 'rtl';\n    const isMeridiem = part === 'meridiem';\n    const isNext = key === (isRTL ? 'ArrowLeft' : 'ArrowRight');\n    const isPrev = key === (isRTL ? 'ArrowRight' : 'ArrowLeft');\n    if (key === 'ArrowUp') {\n      event.preventDefault();\n      increment(part, 1);\n    }\n    if (key === 'ArrowDown') {\n      event.preventDefault();\n      increment(part, -1);\n    }\n    if (isPrev && (isMeridiem || start - 1 < 0)) {\n      event.preventDefault();\n      focusNext(input, -1);\n    }\n    if (isNext && (isMeridiem || input.value.length <= end + 1)) {\n      event.preventDefault();\n      focusNext(input, +1);\n    }\n    if (readOnly && key !== 'Tab') {\n      event.preventDefault();\n    }\n    if (isMeridiem) {\n      if (key === 'a' || key === 'A') notifyChange({\n        meridiem: 'AM'\n      });\n      if (key === 'p' || key === 'P') notifyChange({\n        meridiem: 'PM'\n      });\n    }\n  };\n  const increment = (part, inc) => {\n    let nextPart = timeParts[part];\n    if (part === 'meridiem') {\n      nextPart = nextPart === 'AM' ? 'PM' : 'AM';\n    } else {\n      nextPart = (nextPart || 0) + inc;\n      if (!isValid(String(nextPart), part, use12HourClock != null ? use12HourClock : false)) return;\n    }\n    notifyChange({\n      [part]: nextPart\n    });\n    select();\n  };\n  function notifyChange(updates) {\n    const nextTimeParts = Object.assign({}, timeParts, updates);\n    if (value && isEmptyValue(nextTimeParts, precision)) {\n      return onChange(null);\n    }\n    if (isPartialValue(nextTimeParts, precision)) return setTimeParts(nextTimeParts);\n    let {\n      hours,\n      minutes,\n      seconds,\n      milliseconds,\n      meridiem\n    } = nextTimeParts;\n    let nextDate = new Date(value || getDatePart());\n    if (use12HourClock) {\n      if (hours === 12) hours = 0;\n      hours += meridiem === 'PM' ? 12 : 0;\n    }\n    nextDate.setHours(hours);\n    nextDate.setMinutes(minutes);\n    if (seconds != null) nextDate.setSeconds(seconds);\n    if (milliseconds != null) nextDate.setMilliseconds(milliseconds);\n    onChange(nextDate, {\n      lastValue: value,\n      timeParts\n    });\n  }\n  function focusNext(input, delta) {\n    let nodes = qsa(ref.current, '* [data-focusable]');\n    let next = nodes[nodes.indexOf(input) + delta];\n    next == null ? void 0 : next.focus();\n    select(next);\n  }\n  const {\n    hours,\n    minutes,\n    seconds,\n    milliseconds,\n    meridiem\n  } = timeParts;\n  const showClear = !isEmptyValue(timeParts, precision);\n  return /*#__PURE__*/React.createElement(Widget, _extends({}, props, {\n    role: \"group\",\n    ref: ref\n  }, focusEvents, {\n    focused: focused,\n    disabled: disabled,\n    readOnly: readOnly,\n    className: classNames(className, 'rw-time-input rw-widget-input')\n  }), /*#__PURE__*/React.createElement(DateTimePartInput, {\n    size: 2,\n    pad: pad ? 2 : undefined,\n    value: hours,\n    disabled: disabled,\n    readOnly: readOnly,\n    \"aria-label\": \"hours\",\n    min: getMin('hours'),\n    max: getMax('hours'),\n    ref: hourRef,\n    emptyChar: emptyCharacter,\n    onSelect: handleSelect,\n    onChange: e => handleChange('hours', e),\n    onKeyDown: e => handleKeyDown('hours', e)\n  }), hoursAddon && /*#__PURE__*/React.createElement(\"span\", null, hoursAddon), /*#__PURE__*/React.createElement(DateTimePartInput, {\n    size: 2,\n    pad: pad ? 2 : undefined,\n    value: minutes,\n    disabled: disabled,\n    readOnly: readOnly,\n    \"aria-label\": \"minutes\",\n    min: getMin('minutes'),\n    max: getMax('minutes'),\n    emptyChar: emptyCharacter,\n    onSelect: handleSelect,\n    onChange: e => handleChange('minutes', e),\n    onKeyDown: e => handleKeyDown('minutes', e)\n  }), minsAddon && /*#__PURE__*/React.createElement(\"span\", null, minsAddon), (precision === 'seconds' || precision === 'milliseconds') && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DateTimePartInput, {\n    size: 2,\n    pad: pad ? 2 : undefined,\n    value: seconds,\n    disabled: disabled,\n    readOnly: readOnly,\n    \"aria-label\": \"seconds\",\n    min: getMin('seconds'),\n    max: getMax('seconds'),\n    emptyChar: emptyCharacter,\n    onSelect: handleSelect,\n    onChange: e => handleChange('seconds', e),\n    onKeyDown: e => handleKeyDown('seconds', e)\n  }), secsAddon && /*#__PURE__*/React.createElement(\"span\", null, secsAddon)), precision === 'milliseconds' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DateTimePartInput, {\n    size: 3,\n    pad: pad ? 3 : undefined,\n    value: milliseconds,\n    disabled: disabled,\n    readOnly: readOnly,\n    \"aria-label\": \"milliseconds\",\n    min: getMin('milliseconds'),\n    max: getMax('milliseconds'),\n    emptyChar: emptyCharacter,\n    onSelect: handleSelect,\n    onChange: e => handleChange('milliseconds', e),\n    onKeyDown: e => handleKeyDown('milliseconds', e)\n  }), millisecondsAddon && /*#__PURE__*/React.createElement(\"span\", null, millisecondsAddon)), use12HourClock && /*#__PURE__*/React.createElement(\"div\", {\n    role: \"listbox\",\n    \"aria-label\": \"AM/PM\",\n    \"aria-disabled\": disabled,\n    \"aria-readonly\": readOnly,\n    className: \"rw-time-part-meridiem\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-focusable\": true,\n    role: \"option\",\n    \"aria-atomic\": true,\n    \"aria-selected\": true,\n    \"aria-setsize\": 2,\n    \"aria-live\": \"assertive\",\n    \"aria-disabled\": disabled,\n    \"aria-readonly\": readOnly,\n    \"aria-posinset\": meridiem === 'AM' ? 1 : 2,\n    tabIndex: !disabled ? 0 : void 0,\n    onFocus: handleSelect,\n    onSelect: handleSelect,\n    onKeyDown: e => handleKeyDown('meridiem', e)\n  }, /*#__PURE__*/React.createElement(\"abbr\", null, meridiem))), !noClearButton && /*#__PURE__*/React.createElement(Button, {\n    label: 'clear input',\n    onClick: handleClear,\n    disabled: disabled || readOnly,\n    className: classNames('rw-time-input-clear', showClear && 'rw-show')\n  }, times));\n}\nTimeInput.propTypes = propTypes;\nTimeInput.defaultProps = defaultProps;\nexport default TimeInput;","map":{"version":3,"names":["_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","classNames","qsa","PropTypes","React","useCallback","useRef","useState","useUncontrolled","Button","DateTimePartInput","times","Widget","dates","useFocusManager","selectTextRange","el","HTMLInputElement","select","range","document","createRange","selectNodeContents","selection","window","getSelection","removeAllRanges","addRange","isEmptyValue","p","precision","hours","minutes","seconds","milliseconds","isPartialValue","getValueParts","value","use12HourClock","meridiem","getHours","getMinutes","getSeconds","getMilliseconds","TEST_VALID","hours12","TEST_COMPLETE","testPart","part","tests","test","isValid","isComplete","propTypes","instanceOf","Date","onChange","func","datePart","bool","padValues","emptyCharacter","string","noClearButton","disabled","readOnly","oneOf","isRequired","hoursAddon","node","minutesAddon","secondsAddon","millisecondsAddon","defaultProps","useTimePartState","state","setState","timeParts","setTimeParts","s","TimeInput","uncontrolledProps","_useUncontrolled","pad","className","onBlur","onFocus","props","minsAddon","undefined","secsAddon","ref","hourRef","focusEvents","focused","didHandle","e","_hourRef$current","dataset","focusable","current","focus","getDatePart","startOf","getMin","getMax","activeElement","Promise","resolve","then","handleClear","_hourRef$current2","handleChange","event","currentValue","rawValue","strValue","numValue","isNaN","preventDefault","nextValue","notifyChange","focusNext","currentTarget","handleSelect","handleKeyDown","input","selectionStart","start","selectionEnd","end","isRTL","getComputedStyle","getPropertyValue","isMeridiem","isNext","isPrev","increment","inc","nextPart","String","updates","nextTimeParts","nextDate","setHours","setMinutes","setSeconds","setMilliseconds","lastValue","delta","nodes","next","showClear","createElement","role","size","min","max","emptyChar","onSelect","onKeyDown","Fragment","tabIndex","label","onClick"],"sources":["C:/Users/alice/OneDrive/Área de Trabalho/FATEC/3sem/P.O.O/ADS003_ILP007/atividade-wb5/frontend/node_modules/react-widgets/esm/TimeInput.js"],"sourcesContent":["const _excluded = [\"value\", \"use12HourClock\", \"padValues\", \"emptyCharacter\", \"precision\", \"noClearButton\", \"hoursAddon\", \"minutesAddon\", \"secondsAddon\", \"millisecondsAddon\", \"className\", \"disabled\", \"readOnly\", \"datePart\", \"onChange\", \"onBlur\", \"onFocus\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport classNames from 'classnames';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useRef, useState } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport Button from './Button';\nimport DateTimePartInput from './DateTimePartInput';\nimport { times } from './Icon';\nimport Widget from './Widget';\nimport dates from './dates';\nimport useFocusManager from './useFocusManager';\n\nconst selectTextRange = el => {\n  if (el instanceof HTMLInputElement) return el.select();\n  const range = document.createRange();\n  range.selectNodeContents(el);\n  const selection = window.getSelection();\n\n  if (selection) {\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}; // prettier-ignore\n\n\nconst isEmptyValue = (p, precision) => p.hours == null && p.minutes == null && (precision != 'seconds' && precision !== 'milliseconds' || p.seconds == null) && (precision !== 'milliseconds' || p.milliseconds == null); // prettier-ignore\n\n\nconst isPartialValue = (p, precision) => p.hours == null || p.minutes == null || (precision === 'seconds' || precision === 'milliseconds') && p.seconds == null || precision === 'milliseconds' && p.milliseconds == null;\n\nconst getValueParts = (value, use12HourClock) => {\n  let hours, minutes, seconds, milliseconds;\n  let meridiem = 'AM';\n\n  if (value) {\n    hours = value.getHours();\n\n    if (use12HourClock) {\n      meridiem = hours < 12 ? 'AM' : 'PM';\n      hours = hours % 12 || 12;\n    }\n\n    minutes = value.getMinutes();\n    seconds = value.getSeconds();\n    milliseconds = value.getMilliseconds();\n  }\n\n  return {\n    hours,\n    minutes,\n    seconds,\n    milliseconds,\n    meridiem\n  };\n};\n\nconst TEST_VALID = {\n  hours: /^([1]?[0-9]|2[0-3])$/,\n  hours12: /^(1[0-2]|0?[1-9])$/,\n  minutes: /^([0-5]?\\d)$/,\n  seconds: /^([0-5]?\\d)$/,\n  milliseconds: /^(\\d{1,3})$/\n};\nconst TEST_COMPLETE = {\n  hours: /^([3-9]|\\d{2})$/,\n  hours12: /^(\\d{2}|[2-9])$/,\n  minutes: /^(d{2}|[6-9])$/,\n  seconds: /^(d{2}|[6-9])$/,\n  milliseconds: /^(\\d{3})$/\n};\n\nfunction testPart(value, part, use12HourClock, tests) {\n  const key = part === 'hours' && use12HourClock ? 'hours12' : part;\n  return tests[key].test(value);\n}\n\nconst isValid = (value, part, use12HourClock) => testPart(value, part, use12HourClock, TEST_VALID);\n\nconst isComplete = (value, part, use12HourClock) => testPart(value, part, use12HourClock, TEST_COMPLETE);\n\nconst propTypes = {\n  /**\n   * @example ['valuePicker', [ ['new Date()'] ]]\n   */\n  value: PropTypes.instanceOf(Date),\n\n  /**\n   * @example ['onChangePicker', [ ['new Date()'] ]]\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The default date used to construct a new time when the `value` is empty\n   *\n   * @default new Date()\n   **/\n  datePart: PropTypes.instanceOf(Date),\n\n  /**\n   * Use a 12 hour clock (with AM/PM) instead of 24 hour one.\n   * The configured localizer may provide a default value .\n   **/\n  use12HourClock: PropTypes.bool,\n\n  /** Time part values will be padded by `0` */\n  padValues: PropTypes.bool,\n\n  /** The string character used to pad empty, or cleared values */\n  emptyCharacter: PropTypes.string,\n\n  /** Hide the input clear button */\n  noClearButton: PropTypes.bool,\n\n  /**\n   * @example ['disabled', ['new Date()']]\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * @example ['readOnly', ['new Date()']]\n   */\n  readOnly: PropTypes.bool,\n\n  /** Controls how precise of a time can be input **/\n  precision: PropTypes.oneOf(['minutes', 'seconds', 'milliseconds']).isRequired,\n\n  /**\n   * The seperator between hours and minutes\n   * @default ':'\n   */\n  hoursAddon: PropTypes.node,\n\n  /**\n   * The seperator between hours and minutes\n   * @default ':'\n   */\n  minutesAddon: PropTypes.node,\n\n  /**\n   * The seperator between hours and minutes\n   * @default ':'\n   */\n  secondsAddon: PropTypes.node,\n\n  /**\n   * The seperator between hours and minutes\n   * @default '.'\n   */\n  millisecondsAddon: PropTypes.node\n};\nconst defaultProps = {\n  hoursAddon: ':',\n  padValues: true,\n  precision: 'minutes',\n  emptyCharacter: '-'\n};\n\n// let count = 0\nfunction useTimePartState(value, use12HourClock) {\n  const [state, setState] = useState(() => ({\n    value,\n    use12HourClock,\n    timeParts: getValueParts(value, use12HourClock)\n  }));\n  const setTimeParts = useCallback(timeParts => setState(s => Object.assign({}, s, {\n    timeParts\n  })), [setState]);\n\n  if (state.value !== value || state.use12HourClock !== use12HourClock) {\n    // count++\n    // if (count < 100)\n    setState({\n      value,\n      use12HourClock,\n      timeParts: getValueParts(value, use12HourClock)\n    });\n  }\n\n  return [state.timeParts, setTimeParts];\n}\n\nfunction TimeInput(uncontrolledProps) {\n  const _useUncontrolled = useUncontrolled(uncontrolledProps, {\n    value: 'onChange'\n  }),\n        {\n    value,\n    use12HourClock,\n    padValues: pad,\n    emptyCharacter,\n    precision,\n    noClearButton,\n    hoursAddon,\n    minutesAddon,\n    secondsAddon,\n    millisecondsAddon,\n    className,\n    disabled,\n    readOnly,\n    datePart,\n    onChange,\n    onBlur,\n    onFocus\n  } = _useUncontrolled,\n        props = _objectWithoutPropertiesLoose(_useUncontrolled, _excluded);\n\n  let minsAddon = minutesAddon !== undefined ? minutesAddon : precision === 'seconds' || precision === 'milliseconds' ? ':' : '';\n  let secsAddon = secondsAddon !== undefined ? secondsAddon : precision === 'milliseconds' ? ':' : '';\n  const ref = useRef(null);\n  const hourRef = useRef(null);\n  const [focusEvents, focused] = useFocusManager(ref, {\n    disabled,\n    onBlur,\n    onFocus\n  }, {\n    didHandle: (focused, e) => {\n      var _hourRef$current;\n\n      if (!focused) return;\n      if (!e.target.dataset.focusable) (_hourRef$current = hourRef.current) == null ? void 0 : _hourRef$current.focus();else select(e.target);\n    }\n  });\n  const [timeParts, setTimeParts] = useTimePartState(value != null ? value : null, use12HourClock != null ? use12HourClock : false);\n\n  function getDatePart() {\n    return dates.startOf(datePart || new Date(), 'day');\n  }\n\n  const getMin = part => part === 'hours' ? 1 : 0;\n\n  const getMax = part => {\n    if (part === 'hours') return use12HourClock ? 12 : 23;\n    if (part === 'milliseconds') return 999;\n    return 59;\n  };\n\n  function select(target = document.activeElement) {\n    window.Promise.resolve().then(() => {\n      if (focused) selectTextRange(target);\n    });\n  }\n  /**\n   * Handlers\n   */\n\n\n  const handleClear = () => {\n    var _hourRef$current2;\n\n    (_hourRef$current2 = hourRef.current) == null ? void 0 : _hourRef$current2.focus();\n    if (value) onChange(null);else setTimeParts(getValueParts(null));\n  };\n\n  const handleChange = (part, event) => {\n    const currentValue = timeParts[part];\n    const {\n      target\n    } = event;\n    const rawValue = target.value;\n    let strValue = `${currentValue || ''}${rawValue}`;\n    let numValue = +strValue;\n\n    if (isNaN(numValue) || strValue && !isValid(strValue, part, use12HourClock != null ? use12HourClock : false)) {\n      // the combined value is now past the max or invalid so try the single\n      // digit and \"start over\" filling the value\n      if (isValid(rawValue, part, use12HourClock != null ? use12HourClock : false) && !isNaN(+rawValue)) {\n        // change the effective current value\n        strValue = rawValue;\n        numValue = +rawValue;\n      } else {\n        return event.preventDefault();\n      }\n    }\n\n    const nextValue = target.value ? numValue : null;\n    notifyChange({\n      [part]: nextValue\n    });\n\n    if (nextValue != null && isComplete(strValue, part, use12HourClock != null ? use12HourClock : false)) {\n      focusNext(event.currentTarget, +1);\n    } else {\n      select(target);\n    }\n  };\n\n  const handleSelect = ({\n    target\n  }) => {\n    select(target);\n  };\n\n  const handleKeyDown = (part, event) => {\n    const {\n      key\n    } = event;\n    const input = event.currentTarget;\n    const {\n      selectionStart: start,\n      selectionEnd: end\n    } = input;\n    const isRTL = getComputedStyle(input).getPropertyValue('direction') === 'rtl';\n    const isMeridiem = part === 'meridiem';\n    const isNext = key === (isRTL ? 'ArrowLeft' : 'ArrowRight');\n    const isPrev = key === (isRTL ? 'ArrowRight' : 'ArrowLeft');\n\n    if (key === 'ArrowUp') {\n      event.preventDefault();\n      increment(part, 1);\n    }\n\n    if (key === 'ArrowDown') {\n      event.preventDefault();\n      increment(part, -1);\n    }\n\n    if (isPrev && (isMeridiem || start - 1 < 0)) {\n      event.preventDefault();\n      focusNext(input, -1);\n    }\n\n    if (isNext && (isMeridiem || input.value.length <= end + 1)) {\n      event.preventDefault();\n      focusNext(input, +1);\n    }\n\n    if (readOnly && key !== 'Tab') {\n      event.preventDefault();\n    }\n\n    if (isMeridiem) {\n      if (key === 'a' || key === 'A') notifyChange({\n        meridiem: 'AM'\n      });\n      if (key === 'p' || key === 'P') notifyChange({\n        meridiem: 'PM'\n      });\n    }\n  };\n\n  const increment = (part, inc) => {\n    let nextPart = timeParts[part];\n\n    if (part === 'meridiem') {\n      nextPart = nextPart === 'AM' ? 'PM' : 'AM';\n    } else {\n      nextPart = (nextPart || 0) + inc;\n      if (!isValid(String(nextPart), part, use12HourClock != null ? use12HourClock : false)) return;\n    }\n\n    notifyChange({\n      [part]: nextPart\n    });\n    select();\n  };\n\n  function notifyChange(updates) {\n    const nextTimeParts = Object.assign({}, timeParts, updates);\n\n    if (value && isEmptyValue(nextTimeParts, precision)) {\n      return onChange(null);\n    }\n\n    if (isPartialValue(nextTimeParts, precision)) return setTimeParts(nextTimeParts);\n    let {\n      hours,\n      minutes,\n      seconds,\n      milliseconds,\n      meridiem\n    } = nextTimeParts;\n    let nextDate = new Date(value || getDatePart());\n\n    if (use12HourClock) {\n      if (hours === 12) hours = 0;\n      hours += meridiem === 'PM' ? 12 : 0;\n    }\n\n    nextDate.setHours(hours);\n    nextDate.setMinutes(minutes);\n    if (seconds != null) nextDate.setSeconds(seconds);\n    if (milliseconds != null) nextDate.setMilliseconds(milliseconds);\n    onChange(nextDate, {\n      lastValue: value,\n      timeParts\n    });\n  }\n\n  function focusNext(input, delta) {\n    let nodes = qsa(ref.current, '* [data-focusable]');\n    let next = nodes[nodes.indexOf(input) + delta];\n    next == null ? void 0 : next.focus();\n    select(next);\n  }\n\n  const {\n    hours,\n    minutes,\n    seconds,\n    milliseconds,\n    meridiem\n  } = timeParts;\n  const showClear = !isEmptyValue(timeParts, precision);\n  return /*#__PURE__*/React.createElement(Widget, _extends({}, props, {\n    role: \"group\",\n    ref: ref\n  }, focusEvents, {\n    focused: focused,\n    disabled: disabled,\n    readOnly: readOnly,\n    className: classNames(className, 'rw-time-input rw-widget-input')\n  }), /*#__PURE__*/React.createElement(DateTimePartInput, {\n    size: 2,\n    pad: pad ? 2 : undefined,\n    value: hours,\n    disabled: disabled,\n    readOnly: readOnly,\n    \"aria-label\": \"hours\",\n    min: getMin('hours'),\n    max: getMax('hours'),\n    ref: hourRef,\n    emptyChar: emptyCharacter,\n    onSelect: handleSelect,\n    onChange: e => handleChange('hours', e),\n    onKeyDown: e => handleKeyDown('hours', e)\n  }), hoursAddon && /*#__PURE__*/React.createElement(\"span\", null, hoursAddon), /*#__PURE__*/React.createElement(DateTimePartInput, {\n    size: 2,\n    pad: pad ? 2 : undefined,\n    value: minutes,\n    disabled: disabled,\n    readOnly: readOnly,\n    \"aria-label\": \"minutes\",\n    min: getMin('minutes'),\n    max: getMax('minutes'),\n    emptyChar: emptyCharacter,\n    onSelect: handleSelect,\n    onChange: e => handleChange('minutes', e),\n    onKeyDown: e => handleKeyDown('minutes', e)\n  }), minsAddon && /*#__PURE__*/React.createElement(\"span\", null, minsAddon), (precision === 'seconds' || precision === 'milliseconds') && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DateTimePartInput, {\n    size: 2,\n    pad: pad ? 2 : undefined,\n    value: seconds,\n    disabled: disabled,\n    readOnly: readOnly,\n    \"aria-label\": \"seconds\",\n    min: getMin('seconds'),\n    max: getMax('seconds'),\n    emptyChar: emptyCharacter,\n    onSelect: handleSelect,\n    onChange: e => handleChange('seconds', e),\n    onKeyDown: e => handleKeyDown('seconds', e)\n  }), secsAddon && /*#__PURE__*/React.createElement(\"span\", null, secsAddon)), precision === 'milliseconds' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DateTimePartInput, {\n    size: 3,\n    pad: pad ? 3 : undefined,\n    value: milliseconds,\n    disabled: disabled,\n    readOnly: readOnly,\n    \"aria-label\": \"milliseconds\",\n    min: getMin('milliseconds'),\n    max: getMax('milliseconds'),\n    emptyChar: emptyCharacter,\n    onSelect: handleSelect,\n    onChange: e => handleChange('milliseconds', e),\n    onKeyDown: e => handleKeyDown('milliseconds', e)\n  }), millisecondsAddon && /*#__PURE__*/React.createElement(\"span\", null, millisecondsAddon)), use12HourClock && /*#__PURE__*/React.createElement(\"div\", {\n    role: \"listbox\",\n    \"aria-label\": \"AM/PM\",\n    \"aria-disabled\": disabled,\n    \"aria-readonly\": readOnly,\n    className: \"rw-time-part-meridiem\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-focusable\": true,\n    role: \"option\",\n    \"aria-atomic\": true,\n    \"aria-selected\": true,\n    \"aria-setsize\": 2,\n    \"aria-live\": \"assertive\",\n    \"aria-disabled\": disabled,\n    \"aria-readonly\": readOnly,\n    \"aria-posinset\": meridiem === 'AM' ? 1 : 2,\n    tabIndex: !disabled ? 0 : void 0,\n    onFocus: handleSelect,\n    onSelect: handleSelect,\n    onKeyDown: e => handleKeyDown('meridiem', e)\n  }, /*#__PURE__*/React.createElement(\"abbr\", null, meridiem))), !noClearButton && /*#__PURE__*/React.createElement(Button, {\n    label: 'clear input',\n    onClick: handleClear,\n    disabled: disabled || readOnly,\n    className: classNames('rw-time-input-clear', showClear && 'rw-show')\n  }, times));\n}\n\nTimeInput.propTypes = propTypes;\nTimeInput.defaultProps = defaultProps;\nexport default TimeInput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}